let ComponentMixin=e=>(class extends e{constructor(){super(),this.init(),this._prop=this._initProxy(),this._listenersToRemove=[],this.shadow=this.attachShadow({mode:"open"}),this.render()}_initProxy(){this._observedAttributes=this._getPropNames();let e=this._collectAndDeleteProperties();return new Proxy({props:e,instance:this},{get(t,r){if(!(r in t.props))throw Error("Permission denied.");Object.getOwnPropertyNames(t);if(!(r in e))throw Error("key not in property list");return t.props[r]},set(t,r,s){if(!(r in t.props))throw Error("Permission denied.");Object.getOwnPropertyNames(t);if(!(r in e))throw Error("key not in property list");t.props[r]=s,t.instance.render()}})}_getPropNames(){return Object.getOwnPropertyNames(this).filter(e=>!(e in{_prop:null,_listeners:null}))}_collectAndDeleteProperties(){let e={},t=this;return this._getPropNames().forEach(r=>{e[r]=t[r],delete this[r]}),e}_inArray(e,t){return 0!=e.filter(e=>e==t).length}getProp(e){return Reflect.get(this._prop,e)}setProp(e,t){Reflect.set(this._prop,e,t)}connectedCallback(){this._bindListeners(),this.onInsert()}disconnectedCallback(){this._unbindListeners(),this.onRemove()}_bindListeners(){let e=this;this.listeners().forEach(t=>{let r=()=>t[2]();e.shadowRoot.querySelector(t[0]).addEventListener(t[1],r,!1);let s=[...t];s.push(r),e._listenersToRemove.push(s)})}_unbindListeners(){let e=this;this._listenersToRemove.forEach(t=>{e.shadowRoot.querySelector(t[0]).removeEventListener(t[1],t[3],!1)})}attributeChangedCallback(e,t,r){t!==r&&(this.setProp(e,r),this.onAttributeChange(e,t,r))}render(){this.shadow.innerHTML=this.dom();let e=document.createElement("style");e.textContent=this.style(),this.shadow.appendChild(e)}dom(){}style(){}onAttributeChange(e,t,r){}onInsert(){}onRemove(){}listeners(){return[]}});class Component extends(ComponentMixin(HTMLElement)){}export default Component;